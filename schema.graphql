
type CrucibleEntity @entity {
    id: ID!
    owner: Bytes!            
    timestamp: BigInt!

    index: Int

    locks: [Lock!]  @derivedFrom(field: "crucible")
}

type Lock @entity {
    # id = crucibleId-lockID
    id: ID!
    delegate: Bytes!
    token: Bytes!
    balance: BigInt!
#    VaultEvent: [VaultEvent!] @derivedFrom(field: "lock")

    stakesLength: BigInt!
    stakes: [Stake!]! @derivedFrom(field: "lock")

    unstakesLength: BigInt!
    unstakes: [Unstake!]! @derivedFrom(field: "lock")

    crucible: CrucibleEntity!
}

type Stake @entity {
    id: ID!
    amount: BigInt!
    timestamp: BigInt!
    lock: Lock!
}

type Unstake @entity {
    id: ID!
    amount: BigInt!
    duration: BigInt!

    lock: Lock!
}


type Counters @entity {
    id: ID!
    count: Int!
}


# old subscription entity
enum VaultEventType {
    LOCK
    UNLOCK
}
type VaultEvent @entity {
    id: ID!
    type: VaultEventType!
    amount: BigInt!
    timestamp: BigInt!
    lock: Lock!
}

