specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: CrucibleFactory
    network: {{network}}
    source:
      address: "{{CrucibleFactory}}"
      abi: CrucibleFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - CrucibleEntity
        - InstanceAdded
        - Transfer
      abis:
        - name: CrucibleFactory
          file: ./abis/CrucibleFactory.json
        - name: Crucible
          file: ./abis/Crucible.json
      eventHandlers:
        - event: InstanceAdded(address)
          handler: handleInstanceAdded
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/factory.ts

  - kind: ethereum/contract
    name: AludelV15
    network: {{network}}
    source:
      address: "{{AludelV15}}"
      abi: Aludel
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/aludelv1.5.ts
      entities:
        - Aludel
        - Crucible
      abis:
        - name: Aludel
          file: ./abis/AludelV1.5.json
        - name: CrucibleContract
          file: ./abis/Crucible.json
      eventHandlers:
        - event: RewardClaimed(address,address,uint256)
          handler: handleRewardClaimed

templates:
  - kind: ethereum/contract
    name: CrucibleTemplate
    network: {{network}}
    source:
      abi: Crucible
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/crucible.ts
      entities:
        - Crucible
      abis:
        - name: Crucible
          file: ./abis/Crucible.json
      eventHandlers:
        # event Locked(address delegate, address token, uint256 amount);
        - event: Locked(address,address,uint256)
          handler: handleLocked
        # event Unlocked(address delegate, address token, uint256 amount);
        - event: Unlocked(address,address,uint256)
          handler: handleUnlocked
        # event RageQuit(address delegate, address token, bool notified, string reason);
        - event: RageQuit(address,address,bool,string)
          handler: handleRageQuit
